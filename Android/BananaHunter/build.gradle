buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
        classpath 'com.deploygate:gradle:0.5'
    }
}

apply plugin: 'android'
apply plugin: 'deploygate'
apply from: 'config/default.gradle'

// configure
// -----------------------------------------

repositories {
    mavenCentral()
}

dependencies {
    compile files('libs/unity-classes.jar')
}

android {
    defaultConfig{
        compileSdkVersion 19
        buildToolsVersion "19.0.3"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs      = ['src']
            res.srcDirs       = ['res']
            assets.srcDirs    = ['assets']
            resources.srcDirs = ['src']
        }
    }

    signingConfigs {
        releaseConfig {
            storeFile     file(project.ext.storeFile)
            storePassword project.ext.storePassword
            keyAlias      project.ext.keyAlias
            keyPassword   project.ext.keyPassword
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebugBuild true
        }
        release {
            signingConfig signingConfigs.releaseConfig
        }
    }

    lintOptions {
      // checkReleaseBuilds false
      // Or, if you prefer, you can continue to check for errors in release builds,
      // but continue the build even when errors are found:
      abortOnError false
    }
}

// tasks
// -----------------------------------------

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(projectDir, 'libs'))
}
